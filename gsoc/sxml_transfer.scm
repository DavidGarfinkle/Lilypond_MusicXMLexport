(define sxml (quote (music (@ (name SequentialMusic) (measure #f)) (elements (music (@ (name RelativeOctaveMusic) (measure #f)) (element (music (@ (name SequentialMusic) (measure #f)) (elements ((music (@ (name NoteEvent) (measure 1)) (articulations (music (@ (name ArticulationEvent) (measure 1)) (articulation-type "marcato"))) (duration (@ (log 2) (dot-count 0) (scale 1))) (pitch (@ (octave 1) (note-name 0) (alteration 0)))) (music (@ (name NoteEvent) (measure 1)) (articulations (music (@ (name ArticulationEvent) (measure 1)) (articulation-type "stopped"))) (pitch (@ (octave 1) (note-name 0) (alteration 0))) (duration (@ (log 2) (dot-count 0) (scale 1)))) (music (@ (name NoteEvent) (measure 1)) (articulations (music (@ (name ArticulationEvent) (measure 1)) (articulation-type "tenuto"))) (pitch (@ (octave 1) (note-name 0) (alteration 0))) (duration (@ (log 2) (dot-count 0) (scale 1)))) (music (@ (name NoteEvent) (measure 1)) (articulations (music (@ (name ArticulationEvent) (measure 1)) (articulation-type "staccatissimo"))) (pitch (@ (octave 1) (note-name 0) (alteration 0))) (duration (@ (log 2) (dot-count 0) (scale 1)))) (music (@ (name NoteEvent) (measure 2)) (articulations (music (@ (name ArticulationEvent) (measure 2)) (articulation-type "accent"))) (duration (@ (log 2) (dot-count 0) (scale 1))) (pitch (@ (octave 1) (note-name 0) (alteration 0)))) (music (@ (name NoteEvent) (measure 2)) (articulations (music (@ (name ArticulationEvent) (measure 2)) (articulation-type "staccato"))) (pitch (@ (octave 1) (note-name 0) (alteration 0))) (duration (@ (log 2) (dot-count 0) (scale 1)))) (music (@ (name NoteEvent) (measure 2)) (articulations (music (@ (name ArticulationEvent) (measure 2)) (articulation-type "portato"))) (duration (@ (log 1) (dot-count 0) (scale 1))) (pitch (@ (octave 1) (note-name 0) (alteration 0)))))))))))))